name: Install and Build

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    paths-ignore: 
      - '**.pdf'
      - '**.mhtml'
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Show node version
        run: echo node -v

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build the app
        run: pnpm run build

      - name: Test the connection
        run: |
              pnpm run preview &
              sleep 5
              curl -I http://localhost:4173

  snapshot:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8
          run_install: false

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build the app
        run: pnpm run build

      - name: Launch the app
        run: |
              pnpm run preview &
              sleep 5
              curl -I http://localhost:4173

      - name: Execute snapshot fonction 
        run: |
          mkdir -m 777 gen
          docker run -i --init --cap-add=SYS_ADMIN --network host -v ./gen:/home/pptruser/gen ghcr.io/puppeteer/puppeteer:latest node -e "$(cat snapshot.js)" http://localhost:4173 ./gen
          mv gen/* static/

        

      - name: push to git  
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GUTHUB_ACTOR}@users.noreply.github.com"
          git add static
          git commit -m "Snapshot ${{github.sha}}"
          git push
  deploy:
    runs-on: ubuntu-latest
    needs: 
      - build
      - snapshot

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8
          run_install: false

     

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Vercel Deploy
        run: pnpm install --global vercel@latest

        
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{secrets.VERCEL_TOKEN}}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{secrets.VERCEL_TOKEN}}
    